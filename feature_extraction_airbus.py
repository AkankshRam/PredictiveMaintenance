# -*- coding: utf-8 -*-
"""Feature_Extraction_Airbus.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1cRufe54i-msPuRWT0H8P00hMwz6eHrqX
"""

from google.colab import drive
drive.mount('/content/drive')

import numpy as np
import pandas as pd 
import matplotlib.pyplot as plt
import seaborn as sns
sns.set()

piston_dat = pd.read_csv('/content/Features.csv')

piston_dat.head()

p1_dat = pd.read_csv('/content/Features_P1.csv')
p2_dat = pd.read_csv('/content/Features_P2.csv')
p3_dat = pd.read_csv('/content/Features_P3.csv')

X_piston = piston_dat.drop('fault_type', axis=1)
Y_piston = piston_dat['fault_type']

X_piston.head()

corrmat = piston_dat.corr()
top_corr_features = corrmat.index
plt.figure(figsize=(20,20))
g=sns.heatmap(piston_dat[top_corr_features].corr(),annot=True,cmap="RdYlGn")

X_piston = X_piston.drop(['SigMean','SigMedian','SigRMS','SigSkewness','SigKurtosis','SigCrestFactor','SigRangeCumSum'], axis=1)

p1_dat.head()

X_p1 = p1_dat.drop('fault_type',axis=1)
Y_p1 = p1_dat['fault_type']

corrmat = p1_dat.corr()
top_corr_features = corrmat.index
plt.figure(figsize=(20,20))
g=sns.heatmap(p1_dat[top_corr_features].corr(),annot=True,cmap="RdYlGn")

X_p1 = X_p1.drop(['SigMean','SigMedian','SigRMS','SigPeak','SigPeak2Peak','SigSkewness','SigKurtosis','SigRangeCumSum','SigApproxEntropy'],axis=1)

X_p2 = p2_dat.drop('fault_type',axis=1)
Y_p2 = p2_dat['fault_type']

corrmat = p2_dat.corr()
top_corr_features = corrmat.index
plt.figure(figsize=(20,20))
g=sns.heatmap(p2_dat[top_corr_features].corr(),annot=True,cmap="RdYlGn")

X_p2 = X_p2.drop(['SigMean','SigMedian','SigRMS','SigPeak','SigPeak2Peak','SigKurtosis','SigCrestFactor','SigRangeCumSum','SigApproxEntropy'],axis=1)

X_p3 = p3_dat.drop('fault_type',axis=1)
Y_p3 = p3_dat['fault_type']

corrmat = p3_dat.corr()
top_corr_features = corrmat.index
plt.figure(figsize=(20,20))
g=sns.heatmap(p3_dat[top_corr_features].corr(),annot=True,cmap="RdYlGn")

X_p3 = X_p3.drop(['SigMean','SigMedian','SigRMS','SigPeak','SigPeak2Peak','SigKurtosis','SigCrestFactor','SigRangeCumSum','SigApproxEntropy'],axis=1)

X_piston.head()

X_piston.columns = ['PistSigVar', 'PistSigPeak', 'PistSigPeak2Peak', 'PistSigMAD','PistSigApproxEntropy']

X_piston.head()

X_p1.head()

X_p1.columns = ['P1SigVar', 'P1SigCrestFactor', 'P1SigMAD']

X_p1.head()

X_p2.head()

X_p2.columns = ['P2SigVar','P2SigSkewness','P2SigMAD']

X_p2.head()

X_p3.head()

X_p3.columns = ['P3SigVar','P3SigSkewness','P3SigMAD']

X_p3.head()

mergedDfP1 = X_p1.merge(X_p2, left_index=True, right_index=True)
mergedDfP1
mergedDfP1 = mergedDfP1.merge(X_p3, left_index=True, right_index=True)
mergedDfP1 = mergedDfP1.merge(X_piston, left_index=True, right_index=True)
mergedDfP1

mergedDfP1 = mergedDfP1.merge(Y_piston, left_index=True, right_index=True)
mergedDfP1

corrmat = mergedDfP1.corr()
top_corr_features = corrmat.index
plt.figure(figsize=(20,20))
g=sns.heatmap(mergedDfP1[top_corr_features].corr(),annot=True,cmap="RdYlGn")

mergedDfP1 = mergedDfP1.drop('PistSigApproxEntropy',axis=1)

mergedDfP1

mergedDfP1.to_csv('final_features.csv', index=False)